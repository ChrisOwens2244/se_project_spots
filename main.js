!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__save-button",errorSelector:".modal__error",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visiable"};function r(e,t,r){!function(e){return e.some((e=>!e.validity.valid))}(e)?(t.disabled=!1,t.classList.remove(r.inactiveButtonClass)):(t.disabled=!0,t.classList.add(r.inactiveButtonClass))}function n(e,t){e.disabled=!0,e.classList.add(t.inactiveButtonClass)}var o=e+"8650253b58b46f0f1c06.svg",a=e+"1ecf96fab54a91c898b4.svg",s=e+"40608da7369d39bc1077.svg",c=e+"d73f076c46eb5467f5fc.svg";function d(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";t.textContent=e?n:r}function i(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const n=t.submitter,o=n.textContent;d(!0,n,o,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{d(!1,n,o)}))}const l=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}getAppInfo(){return Promise.all([this.getInitalCards(),this.getUserInfo()])}getInitalCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResopnse)}makeCard(e){let{link:t,name:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({link:t,name:r})}).then(this._checkResopnse)}deleteCard(e){let{id:t}=e;return fetch(`${this._baseUrl}/cards/${t}`,{method:"DELETE",headers:this._headers}).then(this._checkResopnse)}changeLikeStatus(e){let{id:t,isLiked:r}=e;return fetch(`${this._baseUrl}/cards/${t}/likes`,{method:r?"DELETE":"PUT",headers:this._headers}).then(this._checkResopnse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResopnse)}updateProfileInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._checkResopnse)}updateAvatar(e){let{avatar:t}=e;return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then(this._checkResopnse)}_checkResopnse(e){if(e.ok)return e.json();Promise.reject(`Error: ${e.status}`)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"d11d0e4f-579c-4c1f-9935-38514d3f14dc","Content-Type":"application/json"}}),u=document.getElementById("image-logo"),m=document.getElementById("image-avatar"),h=document.getElementById("image-pen"),_=document.getElementById("image-pen-white"),f=document.getElementById("image-plus");u.src=o,h.src=a,_.src=c,f.src=s;const v=document.querySelector(".profile__edit-btn"),p=document.querySelector("#edit-modal"),y=document.querySelector("#photo-modal"),S=y.querySelector(".modal__photo"),b=y.querySelector(".modal__description"),g=document.forms["edit-profile"],E=g.querySelector(".modal__save-button"),k=g.querySelector("#name"),q=g.querySelector("#description"),L=document.querySelector(".profile__name"),C=document.querySelector(".profile__description");function $(e){e.classList.add("modal_opened"),document.addEventListener("keydown",U)}function I(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",U)}function U(e){"Escape"===e.key&&I(document.querySelector(".modal_opened"))}l.getAppInfo().then((e=>{const t=e[0],r=e[1];m.src=r.avatar,m.alt=r.name,L.textContent=r.name,C.textContent=r.about,t.forEach((e=>{const t=R(e);x.append(t)}))})).catch((e=>{console.error(e)})),document.querySelectorAll(".modal").forEach((e=>{e.addEventListener("click",(function(t){t.target.classList.contains("modal")&&I(e)}))})),document.querySelectorAll(".modal__close-button").forEach((e=>{const t=e.closest(".modal");e.addEventListener("click",(e=>{I(t)}))})),v.addEventListener("click",(()=>{$(p),k.value=L.textContent,q.value=C.textContent,n(E,t)})),g.addEventListener("submit",(function(e){i((function(){return l.updateProfileInfo({name:k.value,about:q.value}).then((e=>{L.textContent=e.name,C.textContent=e.about,I(p)})).catch((e=>console.error(e)))}),e)}));const x=document.querySelector(".cards__list"),A=document.querySelector("#card");let B,P;function R(e){const t=A.content.cloneNode(!0),r=t.querySelector(".card__button"),n=t.querySelector(".card__delete-button"),o=e.link,a=e.name,s=t.querySelector(".card__image");return s.src=o,s.alt=a,t.querySelector(".card__name").textContent=a,n.addEventListener("click",(t=>{!function(e,t){B=e.target.closest(".card"),P=t,$(F)}(t,e._id)})),e.isLiked&&r.classList.add("card__button_liked"),r.addEventListener("click",(t=>{!function(e,t){const r=e.target.classList.contains("card__button_liked");l.changeLikeStatus({id:t,isLiked:r}).then((()=>{e.target.classList.toggle("card__button_liked")})).catch((e=>{console.error(e)}))}(t,e._id)})),s.addEventListener("click",(()=>{S.src=o,S.alt=a,b.textContent=a,$(y)})),t}const T=document.querySelector(".profile__new-btn"),w=document.querySelector("#add-modal"),D=document.forms["add-post"],N=D.querySelector(".modal__save-button"),O=D.querySelector("#link"),j=D.querySelector("#caption");T.addEventListener("click",(()=>{$(w),n(N,t)})),D.addEventListener("submit",(function(e){i((function(){return l.makeCard({link:O.value,name:j.value}).then((e=>{x.prepend(R(e)),I(w)})).catch((e=>console.error(e)))}),e)}));const J=document.querySelector("#avatar-modal"),H=document.forms["avatar-form"],z=H.querySelector(".modal__save-button"),M=H.querySelector("#avatar-pic");document.querySelector(".profile__avatar-btn").addEventListener("click",(()=>{$(J),n(z,t)})),H.addEventListener("submit",(function(e){i((function(){return l.updateAvatar({avatar:M.value}).then((e=>{m.src=e.avatar,I(J)})).catch((e=>{console.error(e)}))}),e)}));const F=document.querySelector("#delete-modal"),G=F.querySelector(".modal__prompt-buttons");var K;G.querySelector(".modal__delete-button"),G.addEventListener("submit",(function(e){i((function(){return l.deleteCard({id:P}).then((()=>{B.remove(),I(F)})).catch((e=>{console.error(e)}))}),e,"Deleting...")})),K=t,Array.from(document.querySelectorAll(K.formSelector)).forEach((e=>{e.addEventListener("submit",(function(e){e.preventDefault()})),function(e,t){const n=e.querySelector(t.submitButtonSelector),o=Array.from(e.querySelectorAll(t.inputSelector));r(o,n,t),o.forEach((a=>{a.addEventListener("input",(function(){!function(e,t,r){t.validity.valid?function(e,t,r){const n=e.querySelector(`${r.errorSelector}-${t.id}`);t.classList.remove(r.inputErrorClass),n.classList.remove(r.errorClass),n.textContent=""}(e,t,r):function(e,t,r,n){const o=e.querySelector(`${r.errorSelector}-${t.id}`);t.classList.add(r.inputErrorClass),o.textContent=n,o.classList.add(r.errorClass)}(e,t,r,t.validationMessage)}(e,a,t),r(o,n,t)}))}))}(e,K)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,